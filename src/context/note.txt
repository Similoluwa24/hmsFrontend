// import { createContext, useReducer } from "react";

// export const AuthContext = createContext()

// const initialState = {
//     user : null
// }

// function authReducer  (state, action){
//     if (action.type === "LOGIN") {
//       return  state = {...state, user: action.payload}
//     } 
//     if (action.type === "LOGOUT") {
//       return  state = {...state, user:null}
//     }
// }


// export const AuthProvider = ({children, defaultState = initialState}) => {
//     const [state, dispatch] = useReducer(authReducer,defaultState)

//     console.log("AuthContext State: ", state);
//     return(
//         <AuthContext.Provider value={[state, dispatch]}>
//             {children}
//         </AuthContext.Provider>
//     )
// }




























import { useReducer, createContext, useEffect } from "react";


export const AuthContext = createContext()
export const authReducer = (state, action)=>{
    switch (action.type) {
        case 'LOGIN':
            return {...state,
                user:action.payload}
        case 'LOGOUT':
            return {user:null}
    
        default:
            return state
    }
}

export const AuthProvider = ({children})=>{
     const [state, dispatch] = useReducer(authReducer,{
        user:null
     })


    // Save user to localStorage whenever it changes
    useEffect(() => {
        if (state.user) {
            localStorage.setItem('user', JSON.stringify(state.user));
        } else {
            localStorage.removeItem('user'); // Clear storage on logout
        }
    }, [state.user]);

     console.log("AuthContext State: ", state);
     
    return(
        <AuthContext.Provider value={[state,dispatch]}>
            {children}
        </AuthContext.Provider>
    )
}

  headers:{
                'Content-Type':'application/x-www-form-urlencoded'
            },

  // if( data.user.role === "admin") {
          //   navigate('/admin/home')
          // }else if(data.user.role === "doctor") {
          //   navigate('/doctor/home')
          // }else
          // navigate('/user/home')